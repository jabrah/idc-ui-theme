# This is a basic workflow to help you get started with Actions

name: Upload Release Asset

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    #     branches: [ main ]
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v0.0.1, etc

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Install dependencies
        working-directory: ./js
        run: |
          yarn -v
          yarn --frozen-lockfile

      - name: Build project
        working-directory: ./js
        run: yarn build

      # Bundle everything together, including compiled assets
      - name: Package
        run: |
          cd ..
          zip -r dist.zip idc-ui-theme/ -x *node_modules*
          mv dist.zip idc-ui-theme/

      #       - name: Package components
      #         run: zip -r packages/glimmer-idc/dist.zip packages/glimmer-idc/dist/

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist.zip
          asset_name: dist.zip
          asset_content_type: application/zip
